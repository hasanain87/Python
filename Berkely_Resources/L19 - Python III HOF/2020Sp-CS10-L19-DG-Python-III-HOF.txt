ddgarcia% python3
Python 3.7.2 (v3.7.2:9a3ffc0492, Dec 24 2018, 02:44:43) 
[Clang 6.0 (clang-600.0.57)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> [n*10 for n in range(4) if n != 2]
[0, 10, 30]
>>> [n*10 for n in range(4)]
[0, 10, 20, 30]
>>> [n for n in range(4) if n != 2]
[0, 1, 3]
>>> [n*10 for n in range(4)]
[0, 10, 20, 30]
>>> m = [n*10 for n in range(4)]
>>> multsof10 = [n*10 for n in range(4)]
>>> [m for m in multsof10 if m != 20]
[0, 10, 30]
>>> [m for m in [n*10 for n in range(4)] if m != 20]
[0, 10, 30]
>>> from functools import reduce
>>> def mult10(x):
...     return x*10
... 
>>> [mult10(n) for n in range(4)]
[0, 10, 20, 30]
>>> "monadic -- functions of one argument"
'monadic -- functions of one argument'
>>> "dyadic -- functions of two arguments"
'dyadic -- functions of two arguments'
>>> reduce(+, range(4))
  File "<stdin>", line 1
    reduce(+, range(4))
            ^
SyntaxError: invalid syntax
>>> 2+3
5
>>> def plus(x,y):
...     return x+y
... 
>>> reduce(plus, range(4))
6
>>> def multiply(x,y):
...     return x*y
... 
>>> reduce(multiply, range(1,4))
6
>>> range(4)
range(0, 4)
>>> sum(range(4))
6
>>> product(range(4))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'product' is not defined
>>> reduce(and,[True, False, True])
  File "<stdin>", line 1
    reduce(and,[True, False, True])
             ^
SyntaxError: invalid syntax
>>> def myand(b1,b2):
...     return b1 and b2
... 
>>> reduce(myand,[True, False, True])
False
>>> reduce(myand,[True, True, True])
True
>>> all([True, True, True])
True
>>> any([False, False, False, False])
False
>>> any([False, False, True, False])
True
>>> "lambda"
'lambda'
>>> def times10(n):
...     return n*10
... 
>>> times10(4)
40
>>> times10variable = lambda n: n*10
>>> times10(4)
40
>>> times10variable(4)
40
>>> reduce(lambda a,b: a and b, [True, True, True])
True
>>> reduce(lambda x,y: [x]+[y], ('a','b','c','d'))
[[['a', 'b'], 'c'], 'd']
>>> reduce(lambda x,y: y+x, ('abcd'))
'dcba'
>>> reduce(lambda x,y: [x]+[y], ('abcd'))
[[['a', 'b'], 'c'], 'd']
>>> reduce(lambda x,y: [x]+[y], 'abcd')
[[['a', 'b'], 'c'], 'd']
>>> "UC Berkeley".split()
['UC', 'Berkeley']
>>> list("UC Berkeley")
['U', 'C', ' ', 'B', 'e', 'r', 'k', 'e', 'l', 'e', 'y']
>>> "uc berkeley" > "stanford"
True
>>> "T" < "t"
True
>>> ",".join(["1","hello","there"])
'1,hello,there'